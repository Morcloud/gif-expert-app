{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorie","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","item","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,kBACZC,SAnBc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAExBX,EAAcW,EAAOH,a,+BCThBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAWH,GAD7C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EACNgB,IAAKN,IAET,4BACKA,QCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAStB,ECXwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IASEqB,EDb0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GACC,mBAAGJ,UAAU,mCAAb,sBAEF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAKhB,aEOTiB,MA5Bf,WAEI,MAAoC3C,mBAAS,CAC3C,gBADF,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK6C,EAAWpB,KAAI,SAAAkB,GAAI,OAChB,cAAC,EAAD,CAEI3B,SAAU2B,GADLA,Y,MCjB7BG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5526b3e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ( { setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = ({target}) => {\n        // console.log(e.target.value);\n        setInputValue(target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories( categorie => [inputValue, ...categorie])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                placeholder='Agrega tu serie'\n                onChange={handleInputChange} \n            />\n        </form>\n    )\n}\n\nexport default AddCategory\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=fnTdaQrYrnTYnQEcmpBcyJsEwWXENQ0T`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    };\n  });\n//   console.log(gifs);\n//   setImages(gifs);\n  return gifs\n};\n","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    // console.log(title, url);\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} \n                alt={title}\n            />\n            <p>\n                {title}\n            </p>\n        </div>\n    )\n}\n","// import React, { useEffect, useState } from 'react'\n// import { getGifs } from '../helpers/getGifs'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages )\n    // }, [ category ])\n\n    const { data:images, loading } = useFetchGifs( category )\n\n    return (\n      <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {loading && (\n          <p className=\"animate__animated animate__flash\">Cargando</p>\n        )}\n        <div className=\"card-grid\">\n          {images.map((item) => (\n            <GifGridItem\n              key={item.id}\n              {...item}\n              // title={item.title}\n              // url={item.url}\n            />\n          ))}\n        </div>\n      </>\n    );\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [ category ])\n\n    // setTimeout(() => {\n    //     setState({\n    //         data: [1,2,3,4],\n    //         loading:false\n    //     })\n    // }, 3000);\n\n    return state // { data: [], loading: true }\n\n}","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nfunction GifExpertApp() {\n\n    const [categories, setCategories] = useState([\n      \"Dragon Ball\",\n    ]);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'yugiho'])\n    // }\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {categories.map(item => (\n                    <GifGrid \n                        key={item} \n                        category={item} \n                    />\n                ))}\n            </ol>\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}